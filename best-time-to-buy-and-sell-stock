//https://www.geeksforgeeks.org/best-time-to-buy-and-sell-stock/
#include <iostream>
#include <vector>
using namespace std;
int max_profit(int prices[], int n)
{
    int buy = prices[0], profit = 0;
    for(int i = 1; i < n; i++)
    {
        if(buy > prices[i])
            buy = prices[i];
        else if(prices[i] - buy > profit)
            profit = prices[i] - buy;
    }
    return profit;
}

int max_profit_ManyTimes(int prices[], int n)
{
    if(n < 2)
        return 0;
    
    int sellingDate = 0;
    int buyingDate = 0;
    int totalProfit = 0;
    
    for(int i = 1; i < n; i++)
    {
        if(prices[i] >= prices[i - 1])
        {
            sellingDate++;
        }
        else
        {
            totalProfit += prices[sellingDate] - prices[buyingDate];
            sellingDate = buyingDate = i;
        }
    }
    totalProfit += prices[sellingDate] - prices[buyingDate];
    return totalProfit;
}
int main() {
	int prices[] = { 4, 6, 3, 7, 2, 8, 1, 9 };
	int n = sizeof(prices) / sizeof(prices[0]);
	
	vector<vector<int> > v(n, vector<int>(2, -1));

	cout << " max profit = " << max_profit(prices, n);
	cout << " max profit = " << max_profit_ManyTimes(prices, n);
	return 0;
}
