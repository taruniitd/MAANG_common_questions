//https://coderbyte.com/algorithm/two-sum-problem#:~:text=The%20two%20sum%20problem%20is,in%20O(n)%20time.
//https://github.com/ombharatiya/FAANG-Coding-Interview-Questions#amazon
//https://leetcode.com/problems/two-sum/
#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

vector<pair<int,int>> twoSum(vector<int>& inArr, int num, int target)
{
    vector<pair<int,int>> finalVec;
    unordered_map<int,int> mapCur;
    pair<int,int> pairCur;
    for(int i = 0; i < num; i++)
    {
        
        for(auto iter = mapCur.find(target - inArr[i]); iter != mapCur.end(); iter++)
        {
            cout << "matching sum ? " << endl;
            pairCur.first = iter->second;
            pairCur.second = i;
            //finalVec.emplace_back()
            finalVec.push_back(pairCur);
        }
        cout << "Inserted in map val : " << inArr[i] << " index = " << i << endl; 
        mapCur.insert(make_pair(inArr[i], i));
        
    }
    cout << "final vector size : " << finalVec.size() << endl;
    return finalVec;
}

int main() {
	// your code goes here
    vector<int> inArr = { 1, 4, 2, 6, 9, 7, 3 , 6};
    int n = sizeof(inArr) / sizeof(inArr[0]);
    int target = 12;
    vector<pair<int,int>> pairVec = twoSum(inArr, n, target);
    
    for(auto vecElem = pairVec.begin(); vecElem != pairVec.end(); ++vecElem)
    {
        cout << "Below are elements whose sum is equal to target " << endl;
        cout <<  (*vecElem).first  << "and" << (*vecElem).second << endl;
    }
	return 0;
}
