//https://www.geeksforgeeks.org/check-whether-two-strings-are-anagram-of-each-other/
#include <iostream>
#include <algorithm>
using namespace std;
#define NO_OF_CHARS 256

bool areAnagramUsingSort(string str1, string str2)
{
    int n1 = str1.length();
    int n2 = str2.length();
    
    if(n1 != n2)
        return false;
    sort(str1.begin(), str1.end());
    sort(str2.begin(), str2.end());
    
    for(int i = 0; i < n1; i++)
        if(str1[i] != str2[i])
            return false;
    return true;
}

bool areAnagramUsingCount(string str1, string str2)
{
    int count1[NO_OF_CHARS] = { 0 };
    int count2[NO_OF_CHARS] = { 0 };
    int i;
    for(i = 0; str1[i] && str2[i]; i++)
    {
        count1[str1[i]]++;
        count2[str2[i]]++;
    }
    
    if(str1[i] || str2[i])
    {
        //cout << "return for extra " << endl;
        return false;
    }
    for(int i = 0; i < NO_OF_CHARS; i++)
    {
        if(count1[i] != count2[i])
            false;
        //cout << "return for extra : " << i << endl;
        
    }
    return true;
    
}

bool areAnagramUsingSingleCount(string str1, string str2)
{
    int count[NO_OF_CHARS] = { 0 };
    
    int i;
     for(i = 0; str1[i] && str2[i]; i++)
     {
        count[str1[i]]++;
        count[str2[i]]--;
     }
     
     if(str1[i] != str2[i])
        return false;
    for(int i = 0; i < NO_OF_CHARS; i++)
        if(count[i])
            return false;
    return true;
}

bool areAnagramUsingMap(string str1, string str2)
{
    if(str1.length() != str2.length())
        return false;
    unordered_map<char,int> Map;
    
    for(int i = 0; i < str1.length(); i++)
        Map[str1[i]]++;
    for(int i = 0; i < str2.length(); i++)
    {
        if(Map.find(str2[i]) != Map.end())
        {
            Map[str2[i]]--;
        }
        else
            return false;
        
    }
    for(auto items : Map)
    {
        if(items.second != 0)
            return false;
    }
    return true;
}

int main()
{
    string str1 = "tarun";
    string str2 = "untar";
    
    if(areAnagramUsingSort(str1, str2))
    {
        cout << "Both string are anagram of each other" << endl;
    }
    else
    {
        cout << "Both strings are not anagram of each other" << endl;
    }
    if(areAnagramUsingCount(str1, str2))
    {
        cout << "Both string are anagram of each other" << endl;
    }
    else
    {
        cout << "Both strings are not anagram of each other" << endl;
    }
    if(areAnagramUsingSingleCount(str1, str2))
    {
        cout << "Both string are anagram of each other" << endl;
    }
    else
    {
        cout << "Both strings are not anagram of each other" << endl;
    }
    if(areAnagramUsingMap(str1, str2))
    {
        cout << "Both string are anagram of each other" << endl;
    }
    else
    {
        cout << "Both strings are not anagram of each other" << endl;
    }
}
