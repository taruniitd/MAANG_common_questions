//https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/
#include <iostream>
#include <climits>
using namespace std;

int maxSubArraySum(int arr[], int size)
{
    int max_end_here = 0, max_so_far = INT_MIN;
    int start = 0, end = 0, s = 0;
    
    for(int i = 0; i < size; i++)
    {
        max_end_here += arr[i];
        
        if(max_so_far < max_end_here)
        {
            max_so_far = max_end_here;
            start = s;
            end = i;
        }
        if(max_end_here < 0)
        {
            max_end_here = 0;
            s = i + 1;
        }
    }
    cout << "max sub array range is from start = " << start << " to end = " << end << endl;
    cout << "max sub array sum is = " << max_so_far << endl;
    return max_so_far;
}

int maxSubArraySumForAllNegative(int arr[], int size)
{
    int max_so_far = arr[0];
    int cur_max = arr[0];
    
    for(int i = 0; i < size; i++)
    {
        cur_max = max(arr[i], cur_max + arr[i]);
        max_so_far = max(max_so_far, cur_max);
    }
    return max_so_far;
}

int main() {
    int arr[] = { -2, -3, 4, -1, -2, 1, 5, -3 };
    int n = sizeof(arr) / sizeof(arr[0]);
    
    int maxSum = maxSubArraySum(arr, n);
    cout << "For mix, max sum = " << maxSum << endl;
    
    int arr1[] = { -2, -3, -4, -1, -2, -1, -5, -3 };
    n = sizeof(arr) / sizeof(arr[0]);
    
    maxSum = maxSubArraySumForAllNegative(arr1, n);
    cout << "For All Negative max sum = " << maxSum << endl;
	return 0;
}
