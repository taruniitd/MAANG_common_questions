//https://www.geeksforgeeks.org/find-maximum-meetings-in-one-room/
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

void maxMeeting(int s[], int f[], int n)
{
    pair<int,int> a[n + 1];
    int i;
    
    for(i = 0; i < n; i++)
    {
        a[i].first = f[i];
        a[i].second = i;
    }
    sort(a, a + n);
    int time_limit = a[0].first;
    vector<int> vec;
    
    vec.push_back(a[0].second + 1);
    
    for(i = 1; i < n; i++)
    {
        if(s[a[i].second] > time_limit)
        {
            vec.push_back(a[i].second + 1);
            time_limit = a[i].first;
        }
    }
    for(int i = 0; i < vec.size(); i++)
        cout << vec[i] << "   ";
}

int main() {
    int s[] = { 1, 3, 0, 5, 8, 5 };
    int f[] = { 2, 4, 6, 7, 9, 9 };
    
    int n = sizeof(s) / sizeof(s[0]);
    
    maxMeeting(s, f, n);
	return 0;
}
